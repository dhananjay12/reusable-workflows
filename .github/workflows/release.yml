
name: Release

on:
  workflow_call:
    inputs:
      java-version:
        description: "Java version to Initialize repo"
        default: '17'
        required: false
        type: number
      distribution:
        description: "Whether to cache dependencies or not."
        default: 'adopt'
        required: false
        type: string
    secrets:
      REPO_TOKEN:
        required: true
        description: GITHUB_TOKEN Needed to get some information about the pull request, if any
      SONAR_TOKEN:
        required: true
        description: SonarCloud access token should be generated from https://sonarcloud.io/account/security/
      DOCKERHUB_USERNAME:
        required: true
        description: Dockerhub username
      DOCKERHUB_TOKEN:
        required: true
        description:  Dockerhub token to push images
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Initialize Java and Maven
        uses: dhananjay12/reusable-workflows/.github/actions/init-maven@main
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.distribution }}
      - name: Build with Maven
        run: mvn clean verify

  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Initialize Java and Maven
        uses: dhananjay12/reusable-workflows/.github/actions/init-maven@main
      # Make sure automatic scanning of the project in sonarcloud UI is disable. It can only do via pull or push
      - name: Sonar Cloud scan
        env:
          # Needed to get some information about the pull request, if any
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
          # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  docker:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Initialize Java and Maven
        uses: dhananjay12/reusable-workflows/.github/actions/init-maven@main
      - name: Prepare variables
        id: vars
        run: |
          mvn -Dmaven.test.skip=true package jib:build -Djib.to.auth.username=${{ secrets.DOCKERHUB_USERNAME }} -Djib.to.auth.password=${{ secrets.DOCKERHUB_TOKEN }}




